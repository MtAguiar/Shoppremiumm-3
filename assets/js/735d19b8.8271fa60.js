(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{85:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return m})),t.d(n,"default",(function(){return c}));var o=t(3),i=t(7),r=(t(0),t(98)),a={title:"Environments"},s={unversionedId:"guides/environments",id:"guides/environments",isDocsHomePage:!1,title:"Environments",description:"When working with Nx-Shopify themes, we can think of two kind of environemnts: Build environments and Shopify Themekit environments.",source:"@site/docs/guides/environments.md",slug:"/guides/environments",permalink:"/nx-shopify/docs/guides/environments",editUrl:"https://github.com/trafilea/nx-shopify/edit/master/docs/docs/guides/environments.md",version:"current",sidebar:"docs",previous:{title:"Deploy Command",permalink:"/nx-shopify/docs/cli-usage/executors/deploy"},next:{title:"Liquid To TypeScript Context",permalink:"/nx-shopify/docs/guides/liquid-to-ts-context"}},m=[{value:"Build environments",id:"build-environments",children:[]},{value:"Shopify Themekit environments",id:"shopify-themekit-environments",children:[]},{value:"Example",id:"example",children:[]}],p={toc:m};function c(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"When working with ",Object(r.b)("inlineCode",{parentName:"p"},"Nx-Shopify")," themes, we can think of two kind of environemnts: ",Object(r.b)("inlineCode",{parentName:"p"},"Build environments")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Shopify Themekit environments"),"."),Object(r.b)("p",null,"This guide will explain how to configure and work with each of these environments."),Object(r.b)("h2",{id:"build-environments"},"Build environments"),Object(r.b)("p",null,"You can define different named build configurations for your theme's ",Object(r.b)("inlineCode",{parentName:"p"},"build")," target in the ",Object(r.b)("inlineCode",{parentName:"p"},"workspace.json")," file, such as stage and production, with different default options."),Object(r.b)("p",null,"Among the options available for the ",Object(r.b)("inlineCode",{parentName:"p"},"@trafilea/nx-shopify:build")," executor, the ",Object(r.b)("inlineCode",{parentName:"p"},"fileReplacements")," option is used to work with multiple environments."),Object(r.b)("p",null,"The default generated ",Object(r.b)("inlineCode",{parentName:"p"},"build")," target contains a ",Object(r.b)("strong",{parentName:"p"},"production")," configuration that replaces the ",Object(r.b)("inlineCode",{parentName:"p"},"environment.ts")," content with the one inside ",Object(r.b)("inlineCode",{parentName:"p"},"environment.prod.ts"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:'{21-26} title="workspace.json"',"{21-26}":!0,title:'"workspace.json"'},'{\n  "projects": {\n    "my-theme": {\n      "targets": {\n        "build": {\n          "executor": "@trafilea/nx-shopify:build",\n          "outputs": ["{options.outputPath}"],\n          "options": {\n            "outputPath": "dist/apps/my-theme",\n            "main": "apps/my-theme/src/main.ts",\n            "tsConfig": "apps/my-theme/tsconfig.app.json",\n            "postcssConfig": "apps/my-theme/postcss.config.js",\n            "themekitConfig": "apps/my-theme/config.yml",\n            "sourceMap": true,\n            "assets": ["apps/my-theme/src/assets"]\n          },\n          "configurations": {\n            "production": {\n              "optimization": true,\n              "sourceMap": false,\n              "fileReplacements": [\n                {\n                  "replace": "apps/my-theme/src/environments/environment.ts",\n                  "with": "apps/my-theme/src/environments/environment.prod.ts"\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}\n')),Object(r.b)("p",null,"And the project files look like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-treeview"},"apps/my-theme/src/environments\n\u251c\u2500\u2500 environment.prod.ts\n\u251c\u2500\u2500 environment-schema.ts\n\u2514\u2500\u2500 environment.ts\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="environment-schema.ts"',title:'"environment-schema.ts"'},"export interface EnvironmentSchema {\n  production: boolean;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="environment.ts"',title:'"environment.ts"'},"import { EnvironmentSchema } from './environment-schema';\n\nexport const environment: EnvironmentSchema = {\n  production: false,\n};\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="environment.prod.ts"',title:'"environment.prod.ts"'},"import { EnvironmentSchema } from './environment-schema';\n\nexport const environment: EnvironmentSchema = {\n  production: true,\n};\n")),Object(r.b)("p",null,"That way, you should only import the ",Object(r.b)("inlineCode",{parentName:"p"},"environment.ts")," file and let the build process select the respective environemnt values."),Object(r.b)("p",null,"You can use this file to place any content specific to the environment the theme is being executed in. For example an API url, an analytics service identifier, implement a simple feature flagging system, etc."),Object(r.b)("h2",{id:"shopify-themekit-environments"},"Shopify Themekit environments"),Object(r.b)("p",null,"The theme's ",Object(r.b)("inlineCode",{parentName:"p"},"serve")," and ",Object(r.b)("inlineCode",{parentName:"p"},"deploy")," targets both receive a ",Object(r.b)("inlineCode",{parentName:"p"},"themekitEnv")," option with the name of the environment where files are going to be deployed to."),Object(r.b)("p",null,"These themekit environments are configured in the theme's ",Object(r.b)("inlineCode",{parentName:"p"},"config.yml")," file (Learn more about how to configure this file ",Object(r.b)("a",{parentName:"p",href:"https://shopify.dev/tools/theme-kit/configuration-reference#config-file"},"here"),")."),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"If no value is passed to the ",Object(r.b)("inlineCode",{parentName:"p"},"themekitEnv")," option, the default ",Object(r.b)("inlineCode",{parentName:"p"},"development")," environment will be used."))),Object(r.b)("p",null,"By default, the ",Object(r.b)("inlineCode",{parentName:"p"},"config.example.yml")," file (reference configuration) has an additional ",Object(r.b)("strong",{parentName:"p"},"production")," environment."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yml",metastring:'title="config.example.yml"',title:'"config.example.yml"'},"# See https://shopify.github.io/themekit/configuration/ for more about this config file.\n\ndevelopment:\n  password: <your_password>\n  theme_id: '<your_theme_id>'\n  store: <you_store_name>.myshopify.com\n\nproduction:\n  password: <your_password>\n  theme_id: '<your_theme_id>'\n  store: <you_store_name>.myshopify.com\n")),Object(r.b)("p",null,"That ",Object(r.b)("strong",{parentName:"p"},"production")," environment is used by the ",Object(r.b)("strong",{parentName:"p"},"production")," configurations of the theme's ",Object(r.b)("inlineCode",{parentName:"p"},"serve")," and ",Object(r.b)("inlineCode",{parentName:"p"},"deploy")," targets."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:'{11,23} title="workspace.json"',"{11,23}":!0,title:'"workspace.json"'},'{\n  "projects": {\n    "my-theme": {\n      "targets": {\n        "serve": {\n          "executor": "@trafilea/nx-shopify:serve",\n          "options": { "buildTarget": "my-theme:build" },\n          "configurations": {\n            "production": {\n              "buildTarget": "my-theme:build:production",\n              "themekitEnv": "production"\n            }\n          }\n        },\n        "deploy": {\n          "executor": "@trafilea/nx-shopify:deploy",\n          "options": {\n            "buildTarget": "my-theme:build"\n          },\n          "configurations": {\n            "production": {\n              "buildTarget": "my-theme:build:production",\n              "themekitEnv": "production"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n')),Object(r.b)("p",null,"You can run these configurations using the nx cli:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"$ nx serve my-theme -c=production\n$ nx serve my-theme --prod #same\n")),Object(r.b)("p",null,"Or you can override the ",Object(r.b)("inlineCode",{parentName:"p"},"themekitEnv")," by passing it as a cli option:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"$ nx serve my-theme --themekitEnv anotherenv\n$ nx serve my-theme --prod --themekitEnv development\n")),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("p",null,"Let's configure our theme project for a given situation where we have three different environments and we communicate to a different API data source for each environment."),Object(r.b)("p",null,"The environments are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"development")," (default)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"staging")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"production"))),Object(r.b)("p",null,"This is our default ",Object(r.b)("inlineCode",{parentName:"p"},"environment.ts")," file (used for the default ",Object(r.b)("inlineCode",{parentName:"p"},"development")," environment)."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="environment.ts"',title:'"environment.ts"'},"import { EnvironmentSchema } from './environment-schema';\n\nexport const environment: EnvironmentSchema = {\n  production: false,\n  apiUrl: 'https://dev.example.com',\n};\n")),Object(r.b)("p",null,"We will need to create a copy of the ",Object(r.b)("inlineCode",{parentName:"p"},"environment.ts")," for the ",Object(r.b)("inlineCode",{parentName:"p"},"staging")," and ",Object(r.b)("inlineCode",{parentName:"p"},"production")," environments."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="environment.staging.ts"',title:'"environment.staging.ts"'},"import { EnvironmentSchema } from './environment-schema';\n\nexport const environment: EnvironmentSchema = {\n  production: false,\n  apiUrl: 'https://staging.example.com',\n};\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="environment.prod.ts"',title:'"environment.prod.ts"'},"import { EnvironmentSchema } from './environment-schema';\n\nexport const environment: EnvironmentSchema = {\n  production: true,\n  apiUrl: 'https://production.example.com',\n};\n")),Object(r.b)("p",null,"Here is how our environments directory would look like:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-treeview"},"apps/my-theme/src/environments\n\u251c\u2500\u2500 environment-schema.ts\n\u251c\u2500\u2500 environment.prod.ts\n\u251c\u2500\u2500 environment.staging.ts\n\u2514\u2500\u2500 environment.ts\n")),Object(r.b)("p",null,"Now we just need to import the ",Object(r.b)("inlineCode",{parentName:"p"},"environment.ts")," file in our code, for example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript",metastring:'{2,13-19} title="index.template.ts"',"{2,13-19}":!0,title:'"index.template.ts"'},"import { ThemeModule, ThemeContext, ThemeOnReady } from '@proj/my-theme/core';\nimport { environment } from '@proj/my-theme/environments/environment';\n\nimport './index.template.scss';\n\nexport class IndexTemplate extends ThemeModule implements ThemeOnReady {\n  constructor(context: ThemeContext) {\n    super(context);\n  }\n\n  onReady() {\n    const { production, apiUrl } = environment;\n\n    if (production) {\n      console.log('Hello from production env :)');\n    }\n\n    console.log(`apiUrl is: ${apiUrl}`);\n  }\n}\n")),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Remember to always import the deafult ",Object(r.b)("inlineCode",{parentName:"p"},"environment.ts")," file, contents from other environments will be automatically replaced."))),Object(r.b)("p",null,"Then, we will need to add each environment to the ",Object(r.b)("inlineCode",{parentName:"p"},"config.yml")," file:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yml",metastring:'title="config.example.yml"',title:'"config.example.yml"'},"# See https://shopify.github.io/themekit/configuration/ for more about this config file.\n\ndevelopment:\n  password: mydevpass\n  theme_id: '123456'\n  store: dev-store.myshopify.com\n\nstaging:\n  password: mystagingpass\n  theme_id: '456123'\n  store: staging-store.myshopify.com\n\nproduction:\n  password: myprodpass\n  theme_id: '654321'\n  store: prod-store.myshopify.com\n")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"You could configure all themekit envs using the same store but different theme IDs. This depends on your specific case."))),Object(r.b)("p",null,"Finally, we need to configure our ",Object(r.b)("inlineCode",{parentName:"p"},"workspace.json")," to use the environments."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:'{18,21-26,28,31-36,44-51,60-67} title="workspace.json"',"{18,21-26,28,31-36,44-51,60-67}":!0,title:'"workspace.json"'},'{\n  "projects": {\n    "my-theme": {\n      "targets": {\n        "build": {\n          "executor": "@trafilea/nx-shopify:build",\n          "outputs": ["{options.outputPath}"],\n          "options": {\n            "outputPath": "dist/apps/my-theme",\n            "main": "apps/my-theme/src/main.ts",\n            "tsConfig": "apps/my-theme/tsconfig.app.json",\n            "postcssConfig": "apps/my-theme/postcss.config.js",\n            "themekitConfig": "apps/my-theme/config.yml",\n            "sourceMap": true,\n            "assets": ["apps/my-theme/src/assets"]\n          },\n          "configurations": {\n            "staging": {\n              "optimization": true,\n              "sourceMap": false,\n              "fileReplacements": [\n                {\n                  "replace": "apps/my-theme/src/environments/environment.ts",\n                  "with": "apps/my-theme/src/environments/environment.staging.ts"\n                }\n              ]\n            },\n            "production": {\n              "optimization": true,\n              "sourceMap": false,\n              "fileReplacements": [\n                {\n                  "replace": "apps/my-theme/src/environments/environment.ts",\n                  "with": "apps/my-theme/src/environments/environment.prod.ts"\n                }\n              ]\n            }\n          }\n        },\n        "serve": {\n          "executor": "@trafilea/nx-shopify:serve",\n          "options": { "buildTarget": "my-theme:build" },\n          "configurations": {\n            "staging": {\n              "buildTarget": "my-theme:build:staging",\n              "themekitEnv": "staging"\n            },\n            "production": {\n              "buildTarget": "my-theme:build:production",\n              "themekitEnv": "production"\n            }\n          }\n        },\n        "deploy": {\n          "executor": "@trafilea/nx-shopify:deploy",\n          "options": {\n            "buildTarget": "my-theme:build"\n          },\n          "configurations": {\n            "staging": {\n              "buildTarget": "my-theme:build:staging",\n              "themekitEnv": "staging"\n            },\n            "production": {\n              "buildTarget": "my-theme:build:production",\n              "themekitEnv": "production"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n')),Object(r.b)("p",null,"To make use of our environments we can simple run:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"# development\n\n$ nx build my-theme\n$ nx serve my-theme\n$ nx deploy my-theme\n\n# staging\n\n$ nx build my-theme -c=staging\n$ nx serve my-theme --configuration=staging\n$ nx deploy my-theme -c=staging\n\n# production\n\n$ nx build my-theme --configuration=production\n$ nx serve my-theme -c=production\n$ nx deploy my-theme --prod # this alias only works for 'production' named configurations\n")),Object(r.b)("p",null,"You are ready to make the most out of environments! \ud83d\ude42"))}c.isMDXComponent=!0},98:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return b}));var o=t(0),i=t.n(o);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),c=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),l=c(t),u=o,b=l["".concat(a,".").concat(u)]||l[u]||d[u]||r;return t?i.a.createElement(b,s(s({ref:n},p),{},{components:t})):i.a.createElement(b,s({ref:n},p))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=u;var s={};for(var m in n)hasOwnProperty.call(n,m)&&(s[m]=n[m]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<r;p++)a[p]=t[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);